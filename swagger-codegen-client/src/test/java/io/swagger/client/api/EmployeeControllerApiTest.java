/*
 * Swagger Code Generation Example
 * An example of generating client code from a Swagger application using codegen util.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: indra@basak.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Employee;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.junit.Assert.assertNotNull;

/**
 * API tests for EmployeeControllerApi
 */
@Ignore
public class EmployeeControllerApiTest {

    private final EmployeeControllerApi api = new EmployeeControllerApi();

    
    /**
     * Add an employee
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createEmployeeUsingPOSTTest() throws ApiException {
        Employee employee = new Employee();
        employee.setId(3L);
        employee.setFirstName("Sam");
        employee.setLastName("Fox");
        employee.setEmail("sfox@gmail.com");
        Employee response = api.createEmployeeUsingPOST(employee);
        assertNotNull(response);
        System.out.println(response);

        // TODO: test validations
    }
    
    /**
     * Delete an employee
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteEmployeeUsingDELETETest() throws ApiException {
        Long id = 3L;
        Map<String, Boolean> response = api.deleteEmployeeUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * View a list of available employees
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllEmployeesUsingGETTest() throws ApiException {
        List<Object> response = api.getAllEmployeesUsingGET();
        assertNotNull(response);
        System.out.println(response);

        // TODO: test validations
    }
    
    /**
     * Get an employee by Id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEmployeeByIdUsingGETTest() throws ApiException {
        Long id = 3L;
        Employee response = api.getEmployeeByIdUsingGET(id);
        assertNotNull(response);
        System.out.println(response);

        // TODO: test validations
    }
    
    /**
     * Update an employee
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateEmployeeUsingPUTTest() throws ApiException {
        Employee employeeDetails = null;
        Long id = null;
        Employee response = api.updateEmployeeUsingPUT(employeeDetails, id);

        // TODO: test validations
    }
    
}
